# Docker Compose para desarrollo local con Supabase
# Ejecutar con: docker-compose up -d

version: '3.8'
services:
  # Supabase PostgreSQL Database
  db:
    image: supabase/postgres:15.1.1.53
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: your-super-secret-and-long-postgres-password
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./supabase/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  # Supabase Studio (Dashboard)
  studio:
    image: supabase/studio:20241003-20202db
    restart: unless-stopped
    ports:
      - '3001:3000'
    environment:
      SUPABASE_URL: http://localhost:8000
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0

  # Supabase API Gateway
  kong:
    image: kong:2.8.1
    restart: unless-stopped
    ports:
      - '8000:8000'
      - '8443:8443'
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /var/lib/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml:ro

  # Supabase Auth
  auth:
    image: supabase/gotrue:v2.158.1
    restart: unless-stopped
    depends_on:
      - db
    environment:
      GOTRUE_API_HOST: '0.0.0.0'
      GOTRUE_API_PORT: '9999'
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:your-super-secret-and-long-postgres-password@db:5432/postgres?search_path=auth
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_URI_ALLOW_LIST: '*'
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: 3600
      GOTRUE_JWT_SECRET: your-super-secret-jwt-token-with-at-least-32-characters-long
      GOTRUE_DISABLE_SIGNUP: false
      GOTRUE_EXTERNAL_EMAIL_ENABLED: true

  # Redis para Rate Limiting (opcional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

volumes:
  db_data:
  redis_data:
